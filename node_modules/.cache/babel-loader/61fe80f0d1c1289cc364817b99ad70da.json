{"ast":null,"code":"var _jsxFileName = \"/Users/hammer/Documents/GitHub/Tic-Tac-Toe---Odin/tictactoe/src/CurrentTurn.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentTurn() {\n  _s();\n\n  const [currentTurn, setCurrentTurn] = useState(1);\n\n  function determinePlayer() {\n    if (currentTurn === 1) {\n      return 1;\n    } else if (currentTurn === 2) {\n      return 2;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"turn\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Player 1 turn!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentTurn, \"KZHXAYhkfBCepoBehtUmW4Jh4m8=\");\n\n_c = CurrentTurn;\nexport default CurrentTurn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentTurn\");","map":{"version":3,"names":["useState","CurrentTurn","currentTurn","setCurrentTurn","determinePlayer"],"sources":["/Users/hammer/Documents/GitHub/Tic-Tac-Toe---Odin/tictactoe/src/CurrentTurn.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nfunction CurrentTurn() {\n\n    const [currentTurn, setCurrentTurn] = useState(1)\n    function determinePlayer () {\n        if(currentTurn === 1) {return 1} \n        else if(currentTurn === 2) {return 2}\n    }\n\n\n    return(\n        <div className=\"turn\">\n            <h1>Player 1 turn!</h1>\n        </div>\n    )\n}\nexport default CurrentTurn"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EAEnB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,CAAD,CAA9C;;EACA,SAASI,eAAT,GAA4B;IACxB,IAAGF,WAAW,KAAK,CAAnB,EAAsB;MAAC,OAAO,CAAP;IAAS,CAAhC,MACK,IAAGA,WAAW,KAAK,CAAnB,EAAsB;MAAC,OAAO,CAAP;IAAS;EACxC;;EAGD,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAdQD,W;;KAAAA,W;AAeT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}